<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-21T15:56:46 EDT" name="Default suite" finished-at="2021-05-21T15:57:09 EDT" duration-ms="22875">
    <groups>
    </groups>
    <test started-at="2021-05-21T15:56:46 EDT" name="Default test" finished-at="2021-05-21T15:57:09 EDT" duration-ms="22875">
      <class name="org.iit.healthcare.mmp.InformationTest">
        <test-method is-config="true" signature="startApplication()[pri:0, instance:org.iit.healthcare.mmp.InformationTest@6b26e945]" started-at="2021-05-21T15:56:46 EDT" name="startApplication" finished-at="2021-05-21T15:56:53 EDT" duration-ms="7264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startApplication -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:org.iit.healthcare.mmp.InformationTest@6b26e945]" started-at="2021-05-21T15:56:53 EDT" name="beforemethod" finished-at="2021-05-21T15:56:53 EDT" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="loginapp()[pri:1, instance:org.iit.healthcare.mmp.InformationTest@6b26e945]" started-at="2021-05-21T15:56:53 EDT" name="loginapp" finished-at="2021-05-21T15:57:04 EDT" duration-ms="11083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginapp -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:org.iit.healthcare.mmp.InformationTest@6b26e945]" started-at="2021-05-21T15:57:04 EDT" name="beforemethod" finished-at="2021-05-21T15:57:04 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="info_test()[pri:3, instance:org.iit.healthcare.mmp.InformationTest@6b26e945]" started-at="2021-05-21T15:57:04 EDT" name="info_test" finished-at="2021-05-21T15:57:07 EDT" duration-ms="3053" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ Manage My Patient (MMP) is a medical practice management solution that boosts productivity by automating the day-to-day tasks that can slow an office manager down. Central delivers much more than medical billing software. Sure, it has the tools to help generate cleaner claims and reduce denials, but our easy-to-use practice management software also streamlines your workflow to deliver seamless handoffs across departments.] but found [     Manage My Patient (MMP) is a medical practice management solution that boosts productivity by automating the day-to-day tasks that can slow an office manager down. Central delivers much more than medical billing software. Sure, it has the tools to help generate cleaner claims and reduce denials, but our easy-to-use practice management software also streamlines your workflow to deliver seamless handoffs across departments.

    Manage My Patient (MMP) becomes your practice’s command center, delivering robust, real-time analytics through customizable reports and dashboards to ensure you know how your business is performing on the metrics that matter most.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ Manage My Patient (MMP) is a medical practice management solution that boosts productivity by automating the day-to-day tasks that can slow an office manager down. Central delivers much more than medical billing software. Sure, it has the tools to help generate cleaner claims and reduce denials, but our easy-to-use practice management software also streamlines your workflow to deliver seamless handoffs across departments.] but found [     Manage My Patient (MMP) is a medical practice management solution that boosts productivity by automating the day-to-day tasks that can slow an office manager down. Central delivers much more than medical billing software. Sure, it has the tools to help generate cleaner claims and reduce denials, but our easy-to-use practice management software also streamlines your workflow to deliver seamless handoffs across departments.

    Manage My Patient (MMP) becomes your practice’s command center, delivering robust, real-time analytics through customizable reports and dashboards to ensure you know how your business is performing on the metrics that matter most.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at org.iit.healthcare.mmp.InformationTest.info_test(InformationTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- info_test -->
        <test-method is-config="true" signature="quitBrowser()[pri:0, instance:org.iit.healthcare.mmp.InformationTest@6b26e945]" started-at="2021-05-21T15:57:07 EDT" name="quitBrowser" finished-at="2021-05-21T15:57:09 EDT" duration-ms="1299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- org.iit.healthcare.mmp.InformationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
